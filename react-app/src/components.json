[
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/components/NativeClickOutsideListener/NativeClickOutsideListener.tsx",
    "description": "",
    "displayName": "NativeClickOutsideListener",
    "methods": [],
    "props": {
      "onClickOutside": {
        "defaultValue": null,
        "description": "",
        "name": "onClickOutside",
        "parent": {
          "fileName": "frontend-components/src/Modals/components/NativeClickOutsideListener/NativeClickOutsideListener.tsx",
          "name": "NativeClickOutsideListenerProps"
        },
        "declarations": [
          {
            "fileName": "frontend-components/src/Modals/components/NativeClickOutsideListener/NativeClickOutsideListener.tsx",
            "name": "NativeClickOutsideListenerProps"
          }
        ],
        "required": true,
        "type": {
          "name": "() => void"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/components/Container/Container.tsx",
    "description": "",
    "displayName": "Container",
    "methods": [],
    "props": {
      "onClickOutside": {
        "defaultValue": null,
        "description": "",
        "name": "onClickOutside",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/components/Container/ContainerProps.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/components/Container/ContainerProps.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "() => void"
        }
      },
      "widthVariant": {
        "defaultValue": null,
        "description": "",
        "name": "widthVariant",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/components/Container/ContainerProps.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/components/Container/ContainerProps.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "\"wide\" | \"default\""
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "",
        "name": "disabled",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/components/Container/ContainerProps.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/components/Container/ContainerProps.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/components/CloseButton/CloseButton.tsx",
    "description": "",
    "displayName": "CloseButton",
    "methods": [],
    "props": {
      "onClick": {
        "defaultValue": null,
        "description": "",
        "name": "onClick",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/components/CloseButton/CloseButton.props.ts",
          "name": "CloseButtonProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/components/CloseButton/CloseButton.props.ts",
            "name": "CloseButtonProps"
          }
        ],
        "required": true,
        "type": {
          "name": "() => void"
        }
      },
      "testID": {
        "defaultValue": {
          "value": "modal-close-button"
        },
        "description": "",
        "name": "testID",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/components/CloseButton/CloseButton.props.ts",
          "name": "CloseButtonProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/components/CloseButton/CloseButton.props.ts",
            "name": "CloseButtonProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/components/CloseButton/CloseButton.native.tsx",
    "description": "",
    "displayName": "CloseButtonnative",
    "methods": [],
    "props": {
      "onClick": {
        "defaultValue": null,
        "description": "",
        "name": "onClick",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/components/CloseButton/CloseButton.props.ts",
          "name": "CloseButtonProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/components/CloseButton/CloseButton.props.ts",
            "name": "CloseButtonProps"
          }
        ],
        "required": true,
        "type": {
          "name": "() => void"
        }
      },
      "testID": {
        "defaultValue": null,
        "description": "",
        "name": "testID",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/components/CloseButton/CloseButton.props.ts",
          "name": "CloseButtonProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/components/CloseButton/CloseButton.props.ts",
            "name": "CloseButtonProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/components/Animate/Animate.tsx",
    "description": "",
    "displayName": "Animate",
    "methods": [],
    "props": {
      "show": {
        "defaultValue": null,
        "description": "",
        "name": "show",
        "parent": {
          "fileName": "frontend-components/src/Modals/components/Animate/Animate.tsx",
          "name": "AnimateProps"
        },
        "declarations": [
          {
            "fileName": "frontend-components/src/Modals/components/Animate/Animate.tsx",
            "name": "AnimateProps"
          }
        ],
        "required": true,
        "type": {
          "name": "boolean"
        }
      },
      "alwaysMounted": {
        "defaultValue": {
          "value": "false"
        },
        "description": "",
        "name": "alwaysMounted",
        "parent": {
          "fileName": "frontend-components/src/Modals/components/Animate/Animate.tsx",
          "name": "AnimateProps"
        },
        "declarations": [
          {
            "fileName": "frontend-components/src/Modals/components/Animate/Animate.tsx",
            "name": "AnimateProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onDismiss": {
        "defaultValue": null,
        "description": "",
        "name": "onDismiss",
        "parent": {
          "fileName": "frontend-components/src/Modals/components/Animate/Animate.tsx",
          "name": "AnimateProps"
        },
        "declarations": [
          {
            "fileName": "frontend-components/src/Modals/components/Animate/Animate.tsx",
            "name": "AnimateProps"
          }
        ],
        "required": false,
        "type": {
          "name": "() => void"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/SmallModal/SmallModal.tsx",
    "description": "",
    "displayName": "SmallModal",
    "methods": [],
    "props": {
      "visible": {
        "defaultValue": {
          "value": "false"
        },
        "description": "",
        "name": "visible",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "alwaysMounted": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Only Web feature",
        "name": "alwaysMounted",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "fullWidth": {
        "defaultValue": {
          "value": "false"
        },
        "description": "",
        "name": "fullWidth",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onClose": {
        "defaultValue": null,
        "description": "",
        "name": "onClose",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "() => void"
        }
      },
      "scrollable": {
        "defaultValue": {
          "value": "true"
        },
        "description": "",
        "name": "scrollable",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onDismiss": {
        "defaultValue": null,
        "description": "",
        "name": "onDismiss",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "() => void"
        }
      },
      "testID": {
        "defaultValue": null,
        "description": "",
        "name": "testID",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/SmallModal/SmallModal.styles.native.tsx",
    "description": "",
    "displayName": "Content",
    "methods": [],
    "props": {}
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/SmallModal/SmallModal.native.tsx",
    "description": "",
    "displayName": "SmallModalnative",
    "methods": [],
    "props": {
      "visible": {
        "defaultValue": null,
        "description": "",
        "name": "visible",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "alwaysMounted": {
        "defaultValue": null,
        "description": "Only Web feature",
        "name": "alwaysMounted",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "fullWidth": {
        "defaultValue": {
          "value": "false"
        },
        "description": "",
        "name": "fullWidth",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onClose": {
        "defaultValue": {
          "value": "undefined"
        },
        "description": "",
        "name": "onClose",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "() => void"
        }
      },
      "scrollable": {
        "defaultValue": {
          "value": "true"
        },
        "description": "",
        "name": "scrollable",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onDismiss": {
        "defaultValue": null,
        "description": "",
        "name": "onDismiss",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "() => void"
        }
      },
      "testID": {
        "defaultValue": null,
        "description": "",
        "name": "testID",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
          "name": "SmallModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/SmallModal/SmallModal.props.ts",
            "name": "SmallModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/LargeModal/ResponsiveContainer.tsx",
    "description": "",
    "displayName": "ResponsiveContainer",
    "methods": [],
    "props": {
      "onClickOutside": {
        "defaultValue": null,
        "description": "",
        "name": "onClickOutside",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/components/Container/ContainerProps.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/components/Container/ContainerProps.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "() => void"
        }
      },
      "widthVariant": {
        "defaultValue": null,
        "description": "",
        "name": "widthVariant",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/components/Container/ContainerProps.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/components/Container/ContainerProps.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "\"wide\" | \"default\""
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "",
        "name": "disabled",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/components/Container/ContainerProps.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/components/Container/ContainerProps.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/LargeModal/LargeModal.tsx",
    "description": "",
    "displayName": "LargeModal",
    "methods": [],
    "props": {
      "header": {
        "defaultValue": null,
        "description": "",
        "name": "header",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": true,
        "type": {
          "name": "ReactElement<HeaderProps>"
        }
      },
      "footer": {
        "defaultValue": null,
        "description": "",
        "name": "footer",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactElement<FooterProps | FooterCustomProps>"
        }
      },
      "withScrollView": {
        "defaultValue": null,
        "description": "React Native only: whether to wrap content inside a scrollview",
        "name": "withScrollView",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "alwaysBounceVertical": {
        "defaultValue": null,
        "description": "React Native iOS only: this helps with the issue of content disappearing from the scroll view",
        "name": "alwaysBounceVertical",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "visible": {
        "defaultValue": {
          "value": "false"
        },
        "description": "",
        "name": "visible",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "alwaysMounted": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Only Web feature",
        "name": "alwaysMounted",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onClose": {
        "defaultValue": null,
        "description": "",
        "name": "onClose",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": true,
        "type": {
          "name": "() => void"
        }
      },
      "fullWidth": {
        "defaultValue": null,
        "description": "",
        "name": "fullWidth",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "widthVariant": {
        "defaultValue": {
          "value": "default"
        },
        "description": "",
        "name": "widthVariant",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "\"wide\" | \"default\""
        }
      },
      "data-e2e": {
        "defaultValue": null,
        "description": "",
        "name": "data-e2e",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "",
        "name": "id",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/LargeModal/LargeModal.native.tsx",
    "description": "",
    "displayName": "LargeModalnative",
    "methods": [],
    "props": {
      "header": {
        "defaultValue": null,
        "description": "",
        "name": "header",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": true,
        "type": {
          "name": "ReactElement<HeaderProps>"
        }
      },
      "footer": {
        "defaultValue": null,
        "description": "",
        "name": "footer",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactElement<FooterProps | FooterCustomProps>"
        }
      },
      "withScrollView": {
        "defaultValue": {
          "value": "true"
        },
        "description": "React Native only: whether to wrap content inside a scrollview",
        "name": "withScrollView",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "alwaysBounceVertical": {
        "defaultValue": {
          "value": "false"
        },
        "description": "React Native iOS only: this helps with the issue of content disappearing from the scroll view",
        "name": "alwaysBounceVertical",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "visible": {
        "defaultValue": null,
        "description": "",
        "name": "visible",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "alwaysMounted": {
        "defaultValue": null,
        "description": "Only Web feature",
        "name": "alwaysMounted",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onClose": {
        "defaultValue": null,
        "description": "",
        "name": "onClose",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": true,
        "type": {
          "name": "() => void"
        }
      },
      "fullWidth": {
        "defaultValue": null,
        "description": "",
        "name": "fullWidth",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "widthVariant": {
        "defaultValue": null,
        "description": "",
        "name": "widthVariant",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "\"wide\" | \"default\""
        }
      },
      "data-e2e": {
        "defaultValue": null,
        "description": "",
        "name": "data-e2e",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "",
        "name": "id",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
          "name": "LargeModalProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/LargeModal.props.ts",
            "name": "LargeModalProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/LargeModal/Headers/Header.tsx",
    "description": "",
    "displayName": "Header",
    "methods": [],
    "props": {
      "headingElement": {
        "defaultValue": {
          "value": "h5"
        },
        "description": "",
        "name": "headingElement",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
          "name": "HeaderProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
            "name": "HeaderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "any"
        }
      },
      "textPlacement": {
        "defaultValue": null,
        "description": "Header text position. Default is start. Only applicable for web.",
        "name": "textPlacement",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
          "name": "HeaderProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
            "name": "HeaderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "\"start\" | \"center\""
        }
      },
      "closeButtonPosition": {
        "defaultValue": {
          "value": "left"
        },
        "description": "[RN only]\nButton position in the header.",
        "name": "closeButtonPosition",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
          "name": "HeaderProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
            "name": "HeaderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "\"left\" | \"right\""
        }
      },
      "__onClose": {
        "defaultValue": null,
        "description": "",
        "name": "__onClose",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
          "name": "HeaderProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
            "name": "HeaderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "() => void"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "/Users/vilva.athiban/Desktop/personal/react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.styles.tsx",
    "description": "",
    "displayName": "HeaderText",
    "methods": [],
    "props": {}
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/LargeModal/Headers/Header.styles.native.tsx",
    "description": "",
    "displayName": "HeaderText",
    "methods": [],
    "props": {}
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/LargeModal/Headers/Header.native.tsx",
    "description": "",
    "displayName": "Headernative",
    "methods": [],
    "props": {
      "headingElement": {
        "defaultValue": null,
        "description": "",
        "name": "headingElement",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
          "name": "HeaderProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
            "name": "HeaderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "any"
        }
      },
      "textPlacement": {
        "defaultValue": null,
        "description": "Header text position. Default is start. Only applicable for web.",
        "name": "textPlacement",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
          "name": "HeaderProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
            "name": "HeaderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "\"start\" | \"center\""
        }
      },
      "closeButtonPosition": {
        "defaultValue": {
          "value": "left"
        },
        "description": "[RN only]\nButton position in the header.",
        "name": "closeButtonPosition",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
          "name": "HeaderProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
            "name": "HeaderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "\"left\" | \"right\""
        }
      },
      "__onClose": {
        "defaultValue": null,
        "description": "",
        "name": "__onClose",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
          "name": "HeaderProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Headers/Header.props.ts",
            "name": "HeaderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "() => void"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/LargeModal/Footers/Footer.tsx",
    "description": "",
    "displayName": "Footer",
    "methods": [],
    "props": {
      "primaryButton": {
        "defaultValue": null,
        "description": "",
        "name": "primaryButton",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Footers/Footer.props.ts",
          "name": "FooterProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Footers/Footer.props.ts",
            "name": "FooterProps"
          }
        ],
        "required": true,
        "type": {
          "name": "ReactElement<ButtonProps>"
        }
      },
      "secondaryButton": {
        "defaultValue": null,
        "description": "",
        "name": "secondaryButton",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Footers/Footer.props.ts",
          "name": "FooterProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Footers/Footer.props.ts",
            "name": "FooterProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactElement<ButtonProps>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "/Users/vilva.athiban/Desktop/personal/react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.tsx",
    "description": "",
    "displayName": "Body",
    "methods": [],
    "props": {
      "fullWidth": {
        "defaultValue": {
          "value": "false"
        },
        "description": "",
        "name": "fullWidth",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.props.ts",
          "name": "BodyProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.props.ts",
            "name": "BodyProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "alwaysBounceVertical": {
        "defaultValue": null,
        "description": "",
        "name": "alwaysBounceVertical",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.props.ts",
          "name": "BodyProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.props.ts",
            "name": "BodyProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "withScrollView": {
        "defaultValue": {
          "value": "true"
        },
        "description": "",
        "name": "withScrollView",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.props.ts",
          "name": "BodyProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.props.ts",
            "name": "BodyProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/LargeModal/Body/Body.styles.native.tsx",
    "description": "",
    "displayName": "Content",
    "methods": [],
    "props": {}
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Modals/LargeModal/Body/Body.native.tsx",
    "description": "",
    "displayName": "Bodynative",
    "methods": [],
    "props": {
      "fullWidth": {
        "defaultValue": {
          "value": "false"
        },
        "description": "",
        "name": "fullWidth",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.props.ts",
          "name": "BodyProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.props.ts",
            "name": "BodyProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "alwaysBounceVertical": {
        "defaultValue": {
          "value": "false"
        },
        "description": "",
        "name": "alwaysBounceVertical",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.props.ts",
          "name": "BodyProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.props.ts",
            "name": "BodyProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "withScrollView": {
        "defaultValue": {
          "value": "true"
        },
        "description": "",
        "name": "withScrollView",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.props.ts",
          "name": "BodyProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Modals/LargeModal/Body/Body.props.ts",
            "name": "BodyProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Container/Container.tsx",
    "description": "",
    "displayName": "Container",
    "methods": [],
    "props": {
      "highlighted": {
        "defaultValue": null,
        "description": "With an accent border around",
        "name": "highlighted",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "lifted": {
        "defaultValue": null,
        "description": "Elevated (larger shadow), web only",
        "name": "lifted",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "fullBleed": {
        "defaultValue": null,
        "description": "No border radius and negative margins on mobile and tablet\n(the parent should have `medium` horizontal padding)",
        "name": "fullBleed",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "autoOverflow": {
        "defaultValue": null,
        "description": "Patches default `overflow` on web for desktops making it scrollable",
        "name": "autoOverflow",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "",
        "name": "style",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Container/Container.native.tsx",
    "description": "",
    "displayName": "Containernative",
    "methods": [],
    "props": {
      "highlighted": {
        "defaultValue": null,
        "description": "With an accent border around",
        "name": "highlighted",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "lifted": {
        "defaultValue": null,
        "description": "Elevated (larger shadow), web only",
        "name": "lifted",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "fullBleed": {
        "defaultValue": null,
        "description": "No border radius and negative margins on mobile and tablet\n(the parent should have `medium` horizontal padding)",
        "name": "fullBleed",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "autoOverflow": {
        "defaultValue": null,
        "description": "Patches default `overflow` on web for desktops making it scrollable",
        "name": "autoOverflow",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
          "name": "ContainerProps"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Container/Container.props.ts",
            "name": "ContainerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "",
        "name": "style",
        "declarations": [
          {
            "fileName": "frontend-components/src/Container/Container.native.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "StyleProp<ViewStyle>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "/Users/vilva.athiban/Desktop/personal/react-ds-llm/frontend-components/src/Button/Button.tsx",
    "description": "",
    "displayName": "Button",
    "methods": [],
    "props": {
      "useAnchorTag": {
        "defaultValue": null,
        "description": "Rendered as an <a> element (not supported in React Native)",
        "name": "useAnchorTag",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsButton"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsButton"
          },
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsAnchor"
          },
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsRouter"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "useRouter": {
        "defaultValue": null,
        "description": "Rendered as a <Link> element from React Router (not supported in React Native)",
        "name": "useRouter",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsButton"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsButton"
          },
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsAnchor"
          },
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsRouter"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "variant": {
        "defaultValue": {
          "value": "primary"
        },
        "description": "",
        "name": "variant",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "Variant"
        }
      },
      "size": {
        "defaultValue": {
          "value": "medium"
        },
        "description": "",
        "name": "size",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "Size"
        }
      },
      "loading": {
        "defaultValue": {
          "value": "false"
        },
        "description": "",
        "name": "loading",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "",
        "name": "disabled",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "subline": {
        "defaultValue": {
          "value": "null"
        },
        "description": "",
        "name": "subline",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "",
        "name": "icon",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "iconPosition": {
        "defaultValue": null,
        "description": "",
        "name": "iconPosition",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "\"left\" | \"right\""
        }
      },
      "autoWidth": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Isn't implemented in React Native",
        "name": "autoWidth",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onClick": {
        "defaultValue": null,
        "description": "",
        "name": "onClick",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "() => void"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "",
        "name": "id",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "",
        "name": "aria-label",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "type": {
        "defaultValue": {
          "value": "button"
        },
        "description": "Isn't relevant for React Native",
        "name": "type",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "\"submit\" | \"reset\" | \"button\""
        }
      },
      "form": {
        "defaultValue": null,
        "description": "",
        "name": "form",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "data-e2e": {
        "defaultValue": null,
        "description": "",
        "name": "data-e2e",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "testID": {
        "defaultValue": null,
        "description": "",
        "name": "testID",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "role": {
        "defaultValue": null,
        "description": "",
        "name": "role",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "\"link\" | \"button\""
        }
      },
      "href": {
        "defaultValue": null,
        "description": "",
        "name": "href",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsAnchor"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsAnchor"
          },
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsRouter"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "target": {
        "defaultValue": null,
        "description": "",
        "name": "target",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsAnchor"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsAnchor"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "rel": {
        "defaultValue": null,
        "description": "",
        "name": "rel",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsAnchor"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsAnchor"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "frontend-components/src/Button/Button.native.tsx",
    "description": "",
    "displayName": "Buttonnative",
    "methods": [],
    "props": {
      "useAnchorTag": {
        "defaultValue": null,
        "description": "Rendered as an <a> element (not supported in React Native)",
        "name": "useAnchorTag",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsButton"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsButton"
          },
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsAnchor"
          },
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsRouter"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "useRouter": {
        "defaultValue": null,
        "description": "Rendered as a <Link> element from React Router (not supported in React Native)",
        "name": "useRouter",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsButton"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsButton"
          },
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsAnchor"
          },
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsRouter"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "variant": {
        "defaultValue": {
          "value": "primary"
        },
        "description": "",
        "name": "variant",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "Variant"
        }
      },
      "size": {
        "defaultValue": {
          "value": "medium"
        },
        "description": "",
        "name": "size",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "Size"
        }
      },
      "loading": {
        "defaultValue": {
          "value": "false"
        },
        "description": "",
        "name": "loading",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "disabled": {
        "defaultValue": {
          "value": "false"
        },
        "description": "",
        "name": "disabled",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "subline": {
        "defaultValue": {
          "value": "null"
        },
        "description": "",
        "name": "subline",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "",
        "name": "icon",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "iconPosition": {
        "defaultValue": null,
        "description": "",
        "name": "iconPosition",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "\"left\" | \"right\""
        }
      },
      "autoWidth": {
        "defaultValue": null,
        "description": "Isn't implemented in React Native",
        "name": "autoWidth",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onClick": {
        "defaultValue": null,
        "description": "",
        "name": "onClick",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "() => void"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "",
        "name": "id",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "",
        "name": "aria-label",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "type": {
        "defaultValue": null,
        "description": "Isn't relevant for React Native",
        "name": "type",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "\"submit\" | \"reset\" | \"button\""
        }
      },
      "form": {
        "defaultValue": null,
        "description": "",
        "name": "form",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "data-e2e": {
        "defaultValue": null,
        "description": "",
        "name": "data-e2e",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "testID": {
        "defaultValue": null,
        "description": "",
        "name": "testID",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "role": {
        "defaultValue": null,
        "description": "",
        "name": "role",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsShared"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsShared"
          }
        ],
        "required": false,
        "type": {
          "name": "\"link\" | \"button\""
        }
      },
      "href": {
        "defaultValue": null,
        "description": "",
        "name": "href",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsAnchor"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsAnchor"
          },
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsRouter"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "target": {
        "defaultValue": null,
        "description": "",
        "name": "target",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsAnchor"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsAnchor"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "rel": {
        "defaultValue": null,
        "description": "",
        "name": "rel",
        "parent": {
          "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
          "name": "ButtonPropsAnchor"
        },
        "declarations": [
          {
            "fileName": "react-ds-llm/frontend-components/src/Button/Button.props.ts",
            "name": "ButtonPropsAnchor"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  }
]